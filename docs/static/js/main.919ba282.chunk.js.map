{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.js","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"yMAIe,SAASA,EAAT,GAAuC,IAAjBC,EAAgB,EAAhBA,cAEhC,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBD,OACI,uBAAMC,SAXY,SAACC,GACnBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,MAMd,UACI,6BAAKD,IACL,uBACIQ,KAAK,OACLC,MAAOT,EACPU,SApBe,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,mCCRfG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAGbC,EAHa,iDAGoCC,UAAWH,GAH/C,+DAKAI,MAAMF,GALN,cAKbG,EALa,gBAMEA,EAAKC,OANP,uBAMZC,EANY,EAMZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAZtB,kBAeZM,GAfY,4CAAH,sDCCT,SAASO,EAAT,GAAqC,IAAdH,EAAa,EAAbA,MAAOV,EAAM,EAANA,IAGzC,OACI,sBAAKc,UAAU,2DAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,OCJD,SAASO,EAAT,GAA8B,IAAZnB,EAAW,EAAXA,SAU7B,ECXwB,SAACA,GAE5B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAU,WAEPxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGrB,CAACpB,IAEGqB,EDP2BK,CAAa1B,GAAhCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAIpB,OACI,qCACI,6BAAKpB,IACRoB,GAAW,2CAYR,8BACI,oBAAIJ,UAAU,YAAd,SAEIH,EAAOJ,KAAI,SAACC,GAAD,OACX,cAACK,EAAD,eAEQL,GADCA,EAAIC,cElClB,SAASgB,IAEpB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAMA,OACE,gCACE,8CACA,uBACA,cAACD,EAAD,CAAaC,cAAeA,IAC5B,6BAEIS,EAAWe,KAAI,SAAAT,GACX,OAAO,cAACmB,EAAD,CAASnB,SAAUA,GAAeA,W,MCfzD4B,IAASC,OACL,cAACF,EAAD,IACFG,SAASC,eAAe,W","file":"static/js/main.919ba282.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\n\n\nexport default function AddCategory({setCategories}) {\n    \n     const [inputValue, setInputValue] = useState('');\n\n     const handleInputChange = (e) => {\n         setInputValue(e.target.value);\n     }\n\n     const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if(inputValue.trim().length > 2){\n        setCategories(categories => [inputValue, ...categories]);\n        setInputValue('');\n        }\n        \n     }\n    \n    return (\n        <form onSubmit={handleSubmit}>\n            <h1>{inputValue}</h1>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","\n    export const getGifs = async (category) => {\n\n        \n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category )}&limit=10&api_key=bYC74OGfGrdlTr5Av5ZXaPTR1vUlpk3l`;\n\n        const resp = await fetch(url);\n        const {data} = await resp.json();\n\n        const gifs = data.map(img => {\n            return {\n                id: img.id,\n                title: img.title,\n                url: img.images.downsized_medium.url\n            }\n        });\n        return gifs;\n    }","import React from 'react';\n\nexport default function GifGridItem({ title, url}) {\n    \n    \n    return (\n        <div className=\"card animate__animated animate__bounce animate__delay-2s\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem';\n\nexport default function GifGrid({category}) {\n    \n    /* const [images, setImages] = useState([]);\n    \n    \n    useEffect(() => {\n        getGifs(category)\n            .then( imgs => setImages( imgs));\n    }, [category]); */\n    \n    const {data:images, loading} = useFetchGifs(category);\n    \n\n    \n    return (\n        <>\n            <h3>{category}</h3>\n        {loading && <p>loading...</p>}\n            {/* <div >\n                <ol className=\"card-grid\">\n                {\n                    images.map((img) => \n                    <GifGridItem \n                        key={img.id}\n                        {...img}\n                    />)\n                }  \n                </ol>\n            </div> */}\n            <div >\n                <ol className=\"card-grid\">\n                {\n                    images.map((img) => \n                    <GifGridItem\n                        key={img.id}\n                        {...img}\n                    />)\n                }  \n                </ol>\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n\n const [state, setState] = useState({\n     data: [],\n     loading: true\n });\n \n useEffect(() => {\n     \n    getGifs(category)\n        .then(imgs => {\n            setState({\n                data: imgs,\n                loading: false\n            });\n        })\n }, [category])\n\n return state;\n}","import { useState } from \"react\";\nimport AddCategory from \"./components/AddCategory\";\nimport GifGrid from \"./components/GifGrid\";\n\nexport default function GifExpertApp() {\n    \n    const [categories, setCategories] = useState(['One Punch'])\n    \n    /* const handleAdd = () => {\n        setCategories(() => [...categories, 'Naruto']);\n    } */\n    \n    return (\n      <div>\n        <h2>GifExpertApp</h2>\n        <hr />\n        <AddCategory setCategories={setCategories} />\n        <ol>\n            {\n            categories.map(category => {\n                return <GifGrid category={category} key={category} />\n            } )\n            }\n        </ol>\n      </div>\n    )\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n\n\n"],"sourceRoot":""}